(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

/**
 * CONTACT FORM HANDLER
 * Handles contact form
 */
var contactContainer = document.getElementById('contactContainer');
var contactButton = document.getElementById('contactButton');
var contactOverlay = document.getElementById('contactOverlay');
var contactContainerClassName = contactContainer.classList[0];
var contactContainerClassNameActive = "".concat(contactContainerClassName, "-active");
var contactContainerClassNameDisabled = "".concat(contactContainerClassName, "-disabled");
var contactInputName = document.getElementById('contactName');
var contactInputEmail = document.getElementById('contactEmail');
var contactActive = false;

function openContact() {
  if (!contactActive) {
    contactContainer.classList.add(contactContainerClassNameActive);
    contactContainer.classList.remove(contactContainerClassNameDisabled);
    contactActive = true;
  } else {
    closeContact();
  }
}

function closeContact() {
  contactContainer.classList.add(contactContainerClassNameDisabled);
  contactContainer.classList.remove(contactContainerClassNameActive);
  contactInputName.value = '';
  contactInputEmail.value = '';
  contactActive = false;
}

contactButton.addEventListener('click', function () {
  openContact();
});
contactOverlay.addEventListener('click', function () {
  openContact();
});

},{}],2:[function(require,module,exports){
"use strict";

var _splash = require("./splash");

/**
 * CONSTANTS
 * Set CONSTANTS
 */
var INSTRUMENTS_LIB = {
  instruments: ['violin', 'trumpet', 'keyboard', 'piano', 'sax', 'acoustic-guitar', 'electric-guitar', 'disco']
};
var CYCLE_DIRECTIONS = {
  left: 'left',
  right: 'right'
};
var BASE_IMAGE = './images/instruments/';
var BASE_SOUND = './music/';
/**
 * INSTRUMENT PLAYER HANDLER
 * Handles playing and stopping intsruments
 */

var instrumentNumber = 0;
var instrumentActive = false;
var oldInstrumentClass = null;
var instrumentAudio = document.getElementById('instrumentAudio');
var instrumentIcon = document.getElementById('instrumentIcon');
var instrumentBackground = 'ti-Content';
var instrumentPlaying = 'ti-Content-instrument-playing';

var setContent = function setContent() {
  instrumentIcon.style.backgroundImage = "url(".concat(BASE_IMAGE).concat(INSTRUMENTS_LIB.instruments[instrumentNumber], ".svg)");
  instrumentAudio.src = "".concat(BASE_SOUND).concat(INSTRUMENTS_LIB.instruments[instrumentNumber], ".mp3");
  var newInstrumentClass = "".concat(instrumentBackground, "-").concat(INSTRUMENTS_LIB.instruments[instrumentNumber]);
  oldInstrumentClass ? instrumentIcon.parentElement.classList.replace(oldInstrumentClass, newInstrumentClass) : instrumentIcon.parentElement.classList.add(oldInstrumentClass, newInstrumentClass);
  oldInstrumentClass = newInstrumentClass;
};

var stopInstrument = function stopInstrument() {
  instrumentActive = false;
  instrumentIcon.classList.remove(instrumentPlaying);
  instrumentAudio.pause();
  instrumentAudio.currentTime = 0;
};

var startInstrument = function startInstrument() {
  if (!instrumentActive) {
    instrumentIcon.classList.add(instrumentPlaying);
    instrumentAudio.loop = true;
    instrumentAudio.play();
    instrumentActive = !instrumentActive;
  } else {
    stopInstrument();
  }
};

instrumentIcon.addEventListener('click', startInstrument);
/**
 * CYCLE HANDLER
 * Handles cycling through intsruments
 */

var BUTTON_LEFT = document.getElementById('arrow-left');
var BUTTON_RIGHT = document.getElementById('arrow-right');

var cycleInstruments = function cycleInstruments() {
  var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CYCLE_DIRECTIONS.left;
  stopInstrument();

  if (direction === CYCLE_DIRECTIONS.left) {
    if (instrumentNumber <= 0) {
      instrumentNumber = INSTRUMENTS_LIB.instruments.length - 1;
    } else {
      instrumentNumber--;
    }
  } else {
    if (instrumentNumber >= INSTRUMENTS_LIB.instruments.length - 1) {
      instrumentNumber = 0;
    } else {
      instrumentNumber++;
    }
  }

  setContent();
};

BUTTON_LEFT.addEventListener('click', function () {
  return cycleInstruments(CYCLE_DIRECTIONS.left);
});
BUTTON_RIGHT.addEventListener('click', function () {
  return cycleInstruments(CYCLE_DIRECTIONS.right);
});
/**
* KEYBOARD CONTROL HANDLER
* Handles keyboard controls for play/stop and navigation 
*/

window.addEventListener("keydown", function (e) {
  if (e.keyCode === 32) {
    if (_splash.splashScreenActive) {
      (0, _splash.handleSplashScreen)();
    } else {
      startInstrument();
    }

    ;
  }

  if (e.keyCode === 37) {
    cycleInstruments(CYCLE_DIRECTIONS.left);
  }

  if (e.keyCode === 39) {
    cycleInstruments(CYCLE_DIRECTIONS.right);
  }
});
/**
 * INIT
 * Initialize the app
 */

document.addEventListener('onload', setContent());

},{"./splash":3}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleSplashScreen = exports.splashScreenActive = void 0;

/**
 * SPLASH SCREEN HANDLER
 * Handles splash screen on app init
 */
var splashScreen = document.getElementById('splashScreen');
var splashScreenClassName = splashScreen.classList[0];
var splashButton = document.getElementById('splashButton');
var splashScreenActive = true;
exports.splashScreenActive = splashScreenActive;

var handleSplashScreen = function handleSplashScreen() {
  splashScreen.classList.add("".concat(splashScreenClassName, "-hidden"));
  setTimeout(function () {
    splashScreen.remove();
    exports.splashScreenActive = splashScreenActive = false;
  }, 4000);
};

exports.handleSplashScreen = handleSplashScreen;
splashButton.addEventListener('click', handleSplashScreen);

},{}],4:[function(require,module,exports){
"use strict";

/**
 * CONTACT FORM HANDLER
 * Handles subscribe form
 */
var subscribeContainer = document.getElementById('subscribeContainer');
var subscribeButton = document.getElementById('subscribeButton');
var subscribeOverlay = document.getElementById('subscribeOverlay');
var subscribeContainerClassName = subscribeContainer.classList[0];
var subscribeContainerClassNameActive = "".concat(subscribeContainerClassName, "-active");
var subscribeContainerClassNameDisabled = "".concat(subscribeContainerClassName, "-disabled");
var subscribeInputEmail = document.getElementById('mce-EMAIL');
var subscribeActive = false;

function openSubscribe() {
  if (!subscribeActive) {
    subscribeContainer.classList.add(subscribeContainerClassNameActive);
    subscribeContainer.classList.remove(subscribeContainerClassNameDisabled);
    subscribeActive = true;
  } else {
    closeSubscribe();
  }
}

function closeSubscribe() {
  subscribeContainer.classList.add(subscribeContainerClassNameDisabled);
  subscribeContainer.classList.remove(subscribeContainerClassNameActive);
  subscribeInputEmail.value = '';
  subscribeActive = false;
}

subscribeButton.addEventListener('click', function () {
  openSubscribe();
});
subscribeOverlay.addEventListener('click', function () {
  openSubscribe();
});

},{}]},{},[2,3,1,4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
